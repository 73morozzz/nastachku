- if @lectures.empty?
  %br
  = t(".not_added_yet")
  = link_to t(".first_speaker"), 'mailto:info@nastachku.ru'
  %br
  %br
- else
  - @lectures.each do |lecture|
    %li.lectures__item
      .lectures__item-img
        = image_tag lecture.user.decorate.user_pic, width: 350
        = lecture.workshop_color_icon
      .lectures__item-name
        %b
          = lecture.user.decorate.full_name
        = lecture.user.company
        ,
        = lecture.user.position
      .lectures__item-about
        %h4
          = lecture.title
      .lectures__item-desc
        %p.open_this
          = lecture.thesises
      -# if signed_in?
        - voted_link_attrs = (lecture.lecture_votings.voted_by?(current_user)) ?  {class: "vote-link action-unvote", method: "delete"} : {class: "vote-link action-vote", method: "post"}
        = link_to api_lecture_lecture_votings_path(lecture), class: voted_link_attrs[:class], remote: true, method: voted_link_attrs[:method] do
          %span.btn.btn-state.btn-vote.btn-shine= t('.vote_this_lecture')
          %span.btn.btn-state.btn-vote-hover.btn-shine= t('.vote_this_lecture')
          %span.btn.btn-state.btn-pending.btn-no-clickable= t('.pending')
          %span.btn.btn-state.btn-unvote= t('.already_voted')
          %span.btn.btn-state.btn-unvote-hover= t('.unvote')
      -# else
        %span.btn.btn-no-clickable.vote-tooltip{title: "#{t('.auth_for_vote')}", data: {toggle: 'tooltip'}}
          = t('.they_voted')

          %span.btn.votings-count.btn-no-clickable
            = lecture.lecture_votings.size
